<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-31T19:59:15 IST" name="Suite" finished-at="2025-05-31T19:59:40 IST" duration-ms="24453">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationCheck.SubmitOrder()[pri:0, instance:RahulShettyAcademy.Tests.ErrorValidationCheck@198b6731]" name="SubmitOrder" class="RahulShettyAcademy.Tests.ErrorValidationCheck"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="StandAloneTest.StandAloneSubmitOrder(java.util.HashMap)[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@3270d194]" name="StandAloneSubmitOrder" class="RahulShettyAcademy.Tests.StandAloneTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-05-31T19:59:15 IST" name="ErrorValidation" finished-at="2025-05-31T19:59:27 IST" duration-ms="11483">
      <class name="RahulShettyAcademy.Tests.ErrorValidationCheck">
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:RahulShettyAcademy.Tests.ErrorValidationCheck@198b6731]" started-at="2025-05-31T19:59:15 IST" name="LaunchApplication" finished-at="2025-05-31T19:59:25 IST" duration-ms="10228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="SubmitOrder()[pri:0, instance:RahulShettyAcademy.Tests.ErrorValidationCheck@198b6731]" started-at="2025-05-31T19:59:25 IST" name="SubmitOrder" finished-at="2025-05-31T19:59:26 IST" duration-ms="829" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at RahulShettyAcademy.Tests.ErrorValidationCheck.SubmitOrder(ErrorValidationCheck.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="CloseBrowser()[pri:0, instance:RahulShettyAcademy.Tests.ErrorValidationCheck@198b6731]" started-at="2025-05-31T19:59:26 IST" name="CloseBrowser" finished-at="2025-05-31T19:59:27 IST" duration-ms="379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- RahulShettyAcademy.Tests.ErrorValidationCheck -->
    </test> <!-- ErrorValidation -->
    <test started-at="2025-05-31T19:59:15 IST" name="End2EndProcessForOrder" finished-at="2025-05-31T19:59:40 IST" duration-ms="24453">
      <class name="RahulShettyAcademy.Tests.StandAloneTest">
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@3270d194]" started-at="2025-05-31T19:59:16 IST" name="LaunchApplication" finished-at="2025-05-31T19:59:26 IST" duration-ms="10143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="StandAloneSubmitOrder(java.util.HashMap)[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@3270d194]" started-at="2025-05-31T19:59:26 IST" name="StandAloneSubmitOrder" data-provider="getData" finished-at="2025-05-31T19:59:29 IST" duration-ms="3727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{pwd=Chinmay@234, EmailID=CSK567@gmail.com, PName=ZARA COAT 3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StandAloneSubmitOrder -->
        <test-method is-config="true" signature="CloseBrowser()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@3270d194]" started-at="2025-05-31T19:59:29 IST" name="CloseBrowser" finished-at="2025-05-31T19:59:30 IST" duration-ms="340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
        <test-method is-config="true" signature="LaunchApplication()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@3270d194]" started-at="2025-05-31T19:59:30 IST" name="LaunchApplication" finished-at="2025-05-31T19:59:39 IST" duration-ms="8758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LaunchApplication -->
        <test-method signature="OrderHistory()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@3270d194]" started-at="2025-05-31T19:59:39 IST" name="OrderHistory" finished-at="2025-05-31T19:59:39 IST" depends-on-methods="RahulShettyAcademy.Tests.StandAloneTest.StandAloneSubmitOrder" duration-ms="845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistory -->
        <test-method is-config="true" signature="CloseBrowser()[pri:0, instance:RahulShettyAcademy.Tests.StandAloneTest@3270d194]" started-at="2025-05-31T19:59:39 IST" name="CloseBrowser" finished-at="2025-05-31T19:59:40 IST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseBrowser -->
      </class> <!-- RahulShettyAcademy.Tests.StandAloneTest -->
    </test> <!-- End2EndProcessForOrder -->
  </suite> <!-- Suite -->
</testng-results>
